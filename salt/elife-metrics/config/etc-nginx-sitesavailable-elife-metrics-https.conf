{% set app = pillar.elife_metrics %}
# the upstream component nginx needs to connect to
# is this even working?? this socket doe
upstream django {
    server unix:///tmp/{{ app.name }}-uwsgi.sock;
}

# configuration of the server
server {
    listen      443;
    server_name metrics.elifesciences.org
                *.metrics.elifesciences.org
                metrics.elife.internal
                *.metrics.elife.internal

    charset     utf-8;

    access_log /var/log/nginx/{{ app.name }}.access.log;
    error_log /var/log/nginx/{{ app.name }}.error.log;

    ssl on;
    ssl_certificate     /etc/letsencrypt/live/{{ salt['elife.cfg']('cfn.outputs.DomainName') }}/cert.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ salt['elife.cfg']('cfn.outputs.DomainName') }}/privkey.pem;

    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ salt['elife.cfg']('cfn.outputs.DomainName') }}/fullchain.pem;

    # max upload size
    client_max_body_size 5M;

    # used for Swagger and admin
    location /static {
        alias {{ app.install_path }}/collected-static;
    }

    # all non-media requests
    location / {
        uwsgi_pass django;
        # drop connection after this many seconds
        # WARNING: this value *must* be higher than uwsgi's 'harakiri' value
        # (10s) in /srv/app/uwsgi.ini
        uwsgi_read_timeout 15s;
        include /etc/uwsgi/params;
    }

    # all api requests    
    location /api/ {
        # API POST/PUT/UPDATE/whatever are restricted
        limit_except GET HEAD {
            auth_basic "restricted";
            auth_basic_user_file .crazy-htpasswd;
        }
        # DUPLICATED CONFIGURATION FROM LOCATION /
        # THIS SUCKS.
        uwsgi_pass django;
        uwsgi_read_timeout 15s;
        include /etc/uwsgi/params;
    }
}
